<p class="lead">

  Use these components for your <a href="http://emberjs.com/"
  target="_blank">Ember.js</a> JavaScript project that uses Adobe's <a
  href="http://topcoat.io/" target="_blank">Topcoat</a> CSS framework. This
  plugin is 100% free, open-sourced, and hosted on <a
  href="https://github.com/nfrasser/ember-topcoat-components"
  target="_blank">GitHub</a>.

</p>

<div class="center">
  <object type="image/svg+xml" data="images/logo.svg" width="300" height="300" class="svg-content"></object>
  <p>
    <strong>Download</strong>:
    <a href="https://raw.github.com/nfrasser/ember-topcoat-components/master/dist/scripts/ember-topcoat-components.min.js" download="ember-topcoat-components.min.js">Minified</a>
    &nbsp;Â·&nbsp;
    <a href="https://raw.github.com/nfrasser/ember-topcoat-components/master/dist/scripts/ember-topcoat-components.js" download="ember-topcoat-components.js">Source</a>
  </p>
</div>


<h2>Getting Started</h2>

<p>

  Download the source from above or add to your project via <a
  href="http://bower.io/">Bower</a>:

</p>

{{#prettify }}
bower install ember-topcoat-components --save
{{/prettify}}


<p>
  Then include it in in your HTML following the jQuery, Handlebars, and Ember:
</p>

{{#prettify lang="html" linenums=1}}
&lt;!-- Frameworks --&gt;
&lt;script src="scripts/jquery.js"&gt;&lt;/script&gt;
&lt;script src="scripts/handlebars.js"&gt;&lt;/script&gt;
&lt;script src="scripts/ember.js"&gt;&lt;/script&gt;

&lt;!-- Components and other plugins --&gt;
&lt;script src="scripts/ember-topcoat-components.js"&gt;&lt;/script&gt;

&lt;!-- Your Ember App --&gt;
&lt;script src="scripts/app.js"&gt;&lt;/script&gt;
{{/prettify}}

<p>

  You will now have access to the components within the <code>TC</code> Ember
  namespace. Before you can use these in your templates, you have to inject
  them into your app's scope. Quickly do this with the provided
  <code>TC.inject()</code> function:

</p>

{{#prettify lang="js" linenums=1}}
// app.js
var App = Ember.Application.create();

// Define controllers, views, etc.
// ...

// Components
TC.inject(App);

// ...

App.Router.map(function () {
  // ...
});
{{/prettify}}

<h2>Components</h2>

<div class="lead">
  <ul>
    {{#each App.topcoatComponentList itemViewClass="App.ListItemView"}}
      {{link-to title name}}
    {{/each}}
  </ul>
</div>
